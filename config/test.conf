admin_port = 9991
admin_http_port = 9990
w3c_header_period = 60000

db {
  username = "$(DB_USERNAME)"
  password = "$(DB_PASSWORD)"
  connection_pool {
    max_wait = 20
    min_evictable_idle_msec = -1
    size_max = 10
    size_min = 10
    test_idle_msec = 1000
    test_on_borrow = false

    timeout {
      initialize = 2000
      open = 2000
      pool_size = 10
      queue_size = 10000
    }
  }

  disable {
    error_count = 3
    seconds = 60
  }

  timeouts {
    select = 2000
    select_modify = 2000
    execute = 2000
  }
}

# use a connection pool of 1 when materializing tables.
# (the memoizing connection pools will create a new connection pool because there's no db name.)
materializing_db (inherit="db") {
  connection_pool (inherit="db.connection_pool") {
    size_max = 1
    size_min = 1
  }
}

errors {
  deadlock_retries = 3
}

log {
  level = "fatal"
  console = true
  throttle_period_msec = 60000
  throttle_rate = 10
}

gizzard_services {
  name = "edges"
  min_threads = 5
  shard_server_port = 7917
  job_server_port = 7919
  client_timeout_msec = 100
  idle_timeout_sec = 10
}

edges {
  server_port = 7915
  intersection_timeout_ms = 100
  average_intersection_proportion = 0.1
  intersection_page_size_max = 4000
  aggregate_jobs_page_size = 500
  db_name = "edges_test"

  w3c = [
    "action-timing",
    "db-timing",
    "connection-pool-release-timing",
    "connection-pool-reserve-timing",
    "database-open-timing",
    "database-close-timing",
    "db-count-query-default",
    "x-db-timing-query-default",
    "kestrel-put-timing",
    "db-count-select",
    "db-count-execute",
    "db-timing-select",
    "db-timing-execute",
    "job-success-count",
    "operation",
    "arguments"
  ]

  nameservers (inherit="db") {
    connection_pool {
      max_wait = 20
      min_evictable_idle_msec = -1
      size_max = 5
      size_min = 5
      test_idle_msec = 1000
      test_on_borrow = false

      timeout {
        initialize = 1000
        open = 500
        pool_size = 10
        queue_size = 10000
      }
    }
    query_timeout_default = 15000

    replicas {
      ns1 (inherit="db") {
        hostname = "localhost"
        database = "flock_edges_test"
      }
    }
  }

  future {
    pool_size = 100
    max_pool_size = 100
    keep_alive_time_seconds = 5
    timeout_seconds = 6
  }

  replication {
    future {
      pool_size = 100
      max_pool_size = 100
      keep_alive_time_seconds = 5
      timeout_seconds = 6
    }
  }

  queue {
    path = "/tmp"
    journal off
    primary {
      job_queue = "edges_jobs"
      error_queue = "edges_errors"
      threads = 1
      error_limit = 25
      replay_interval = 900
      per_flush_item_limit = 1000
      jitter_rate = 0
    }
    copy {
      job_queue = "copy_jobs"
      error_queue = "copy_errors"
      threads = 1
      error_limit = 25
      replay_interval = 900
      per_flush_item_limit = 1000
      jitter_rate = 0
    }
    slow {
      job_queue = "edges_slow_jobs"
      error_queue = "edges_slow_errors"
      threads = 1
      error_limit = 25
      replay_interval = 900
      per_flush_item_limit = 1000
      jitter_rate = 0
    }
    max_memory_size = 36000000
  }
}
